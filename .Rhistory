model <- update(model, paste("~.-", dr_var, sep=""))
mods <- append(mods, list(model))
(dr <- drop1(model))
aics <- c(aics, dr[1,]$AIC)
print(paste("AIC = ", aics[length(aics)]))
dr_var <- rownames(dr[dr$AIC==min(dr$AIC[rownames(dr)!="<none>"]),])
length(dr_var)
dr_var
print(paste("Droping", dr_var))
model <- update(model, paste("~.-", dr_var, sep=""))
mods <- append(mods, list(model))
(dr <- drop1(model))
aics <- c(aics, dr[1,]$AIC)
print(paste("AIC = ", aics[length(aics)]))
dr_var <- rownames(dr[dr$AIC==min(dr$AIC[rownames(dr)!="<none>"]),])
length(dr_var) > 0
print(paste("Droping", dr_var))
model <- update(model, paste("~.-", dr_var, sep=""))
mods <- append(mods, list(model))
(dr <- drop1(model))
aics <- c(aics, dr[1,]$AIC)
print(paste("AIC = ", aics[length(aics)]))
dr_var <- rownames(dr[dr$AIC==min(dr$AIC[rownames(dr)!="<none>"]),])
length(dr_var)
length(dr_var) > 0
print(paste("Droping", dr_var))
model <- update(model, paste("~.-", dr_var, sep=""))
mods <- append(mods, list(model))
(dr <- drop1(model))
aics <- c(aics, dr[1,]$AIC)
print(paste("AIC = ", aics[length(aics)]))
dr_var <- rownames(dr[dr$AIC==min(dr$AIC[rownames(dr)!="<none>"]),])
length(dr_var)
print(paste("Droping", dr_var))
model <- update(model, paste("~.-", dr_var, sep=""))
mods <- append(mods, list(model))
(dr <- drop1(model))
aics <- c(aics, dr[1,]$AIC)
print(paste("AIC = ", aics[length(aics)]))
dr_var <- rownames(dr[dr$AIC==min(dr$AIC[rownames(dr)!="<none>"]),])
length(dr_var)
print(paste("Droping", dr_var))
model <- update(model, paste("~.-", dr_var, sep=""))
mods <- append(mods, list(model))
(dr <- drop1(model))
aics <- c(aics, dr[1,]$AIC)
print(paste("AIC = ", aics[length(aics)]))
dr_var <- rownames(dr[dr$AIC==min(dr$AIC[rownames(dr)!="<none>"]),])
print(paste("Droping", dr_var))
model <- update(model, paste("~.-", dr_var, sep=""))
mods <- append(mods, list(model))
(dr <- drop1(model))
aics <- c(aics, dr[1,]$AIC)
print(paste("AIC = ", aics[length(aics)]))
dr_var <- rownames(dr[dr$AIC==min(dr$AIC[rownames(dr)!="<none>"]),])
print(paste("Droping", dr_var))
model <- update(model, paste("~.-", dr_var, sep=""))
mods <- append(mods, list(model))
(dr <- drop1(model))
aics <- c(aics, dr[1,]$AIC)
print(paste("AIC = ", aics[length(aics)]))
dr_var <- rownames(dr[dr$AIC==min(dr$AIC[rownames(dr)!="<none>"]),])
print(paste("Droping", dr_var))
model <- update(model, paste("~.-", dr_var, sep=""))
mods <- append(mods, list(model))
(dr <- drop1(model))
aics <- c(aics, dr[1,]$AIC)
print(paste("AIC = ", aics[length(aics)]))
dr_var <- rownames(dr[dr$AIC==min(dr$AIC[rownames(dr)!="<none>"]),])
print(paste("Droping", dr_var))
model <- update(model, paste("~.-", dr_var, sep=""))
mods <- append(mods, list(model))
(dr <- drop1(model))
aics <- c(aics, dr[1,]$AIC)
print(paste("AIC = ", aics[length(aics)]))
dr_var <- rownames(dr[dr$AIC==min(dr$AIC[rownames(dr)!="<none>"]),])
print(paste("Droping", dr_var))
model <- update(model, paste("~.-", dr_var, sep=""))
mods <- append(mods, list(model))
(dr <- drop1(model))
aics <- c(aics, dr[1,]$AIC)
print(paste("AIC = ", aics[length(aics)]))
dr_var <- rownames(dr[dr$AIC==min(dr$AIC[rownames(dr)!="<none>"]),])
print(paste("Droping", dr_var))
model <- update(model, paste("~.-", dr_var, sep=""))
mods <- append(mods, list(model))
(dr <- drop1(model))
aics <- c(aics, dr[1,]$AIC)
print(paste("AIC = ", aics[length(aics)]))
dr_var <- rownames(dr[dr$AIC==min(dr$AIC[rownames(dr)!="<none>"]),])
length(dr_var)
length(dr_var) > 0
stepAIC <- function(model){
mods <- list(model)
dr <- drop1(model)
aics <- c(dr[1,]$AIC)
print(paste("AIC = ", aics[length(aics)]))
dr_var <- rownames(dr[dr$AIC==min(dr$AIC[rownames(dr)!="<none>"]),])
while (length(dr_var) > 0) {
print(paste("Droping", dr_var))
model <- update(model, paste("~.-", dr_var, sep=""))
mods <- append(mods, list(model))
(dr <- drop1(model))
aics <- c(aics, dr[1,]$AIC)
print(paste("AIC = ", aics[length(aics)]))
dr_var <- rownames(dr[dr$AIC==min(dr$AIC[rownames(dr)!="<none>"]),])
}
plot(aics~c(1:length(aics)), type="l", xlab = "Step", ylab = "AIC")
points(aics~c(1:length(aics)))
points(aics[which(aics==min(aics))]~c(1:length(aics))[which(aics==min(aics))], col = "red")
return(mods[[which(aics == min(aics))]])
}
summary(stepAIC(m.end))
m.end <- summary(stepAIC(m.end))
plot(m.end)
m.end
# end ---------------------------------------------------------------------------------------------------------------------
m.end <- lm(end_rel ~ ALAN+noise_db+DEN+
temp_sunset+prec_sunset+press_sunset+humid_sunset+wind_sunset+cloud+moon+
ALAN:noise_db + ALAN:DEN + noise_db:DEN, data=df_end)
m.end <- stepAIC(m.end)
plot(m.end)
summary(m.end)
m.end <- step(m.end)
# end ---------------------------------------------------------------------------------------------------------------------
m.end <- lm(end_rel ~ ALAN+noise_db+DEN+
temp_sunset+prec_sunset+press_sunset+humid_sunset+wind_sunset+cloud+moon+
ALAN:noise_db + ALAN:DEN + noise_db:DEN, data=df_end)
step(m.end)
summary(step(m.end))
m.end <-
summary(stepAIC(m.end))
# end ---------------------------------------------------------------------------------------------------------------------
m.end <- lm(end_rel ~ ALAN+noise_db+DEN+
temp_sunset+prec_sunset+press_sunset+humid_sunset+wind_sunset+cloud+moon+
ALAN:noise_db + ALAN:DEN + noise_db:DEN, data=df_end)
summary(stepAIC(m.end))
summary(step(m.end))
?step
summary(step(m.end, trace = F))
summary(stepAIC(m.end))
ggplot(data.frame(aic=aics, x=1:length(aics), vars=dr_vars), aes(x=step, y=aic)) +
geom_point() +
geom_line() +
scale_x_continuous(labels = dr_vars)
stepAIC <- function(model){
mods <- list(model)
dr <- drop1(model)
aics <- c(dr[1,]$AIC)
print(paste("AIC = ", aics[length(aics)]))
dr_var <- rownames(dr[dr$AIC==min(dr$AIC[rownames(dr)!="<none>"]),])
dr_vars <- c("None")
while (length(dr_var) > 0) {
print(paste("Droping", dr_var))
model <- update(model, paste("~.-", dr_var, sep=""))
mods <- append(mods, list(model))
dr_vars <- c(dr_vars, dr_var)
(dr <- drop1(model))
aics <- c(aics, dr[1,]$AIC)
print(paste("AIC = ", aics[length(aics)]))
dr_var <- rownames(dr[dr$AIC==min(dr$AIC[rownames(dr)!="<none>"]),])
}
ggplot(data.frame(aic=aics, x=1:length(aics), vars=dr_vars), aes(x=step, y=aic)) +
geom_point() +
geom_line() +
scale_x_continuous(labels = dr_vars) +
labs(x="Variable dropped", y="AIC") +
theme_bw()
# plot(aics~c(1:length(aics)), type="l", xlab = "Variable dropped", ylab = "AIC")
# points(aics~c(1:length(aics)))
# points(aics[which(aics==min(aics))]~c(1:length(aics))[which(aics==min(aics))], col = "red")
return(mods[[which(aics == min(aics))]])
}
# end ---------------------------------------------------------------------------------------------------------------------
m.end <- lm(end_rel ~ ALAN+noise_db+DEN+
temp_sunset+prec_sunset+press_sunset+humid_sunset+wind_sunset+cloud+moon+
ALAN:noise_db + ALAN:DEN + noise_db:DEN, data=df_end)
summary(stepAIC(m.end))
stepAIC <- function(model){
mods <- list(model)
dr <- drop1(model)
aics <- c(dr[1,]$AIC)
print(paste("AIC = ", aics[length(aics)]))
dr_var <- rownames(dr[dr$AIC==min(dr$AIC[rownames(dr)!="<none>"]),])
dr_vars <- c("None")
while (length(dr_var) > 0) {
print(paste("Droping", dr_var))
model <- update(model, paste("~.-", dr_var, sep=""))
mods <- append(mods, list(model))
dr_vars <- c(dr_vars, dr_var)
(dr <- drop1(model))
aics <- c(aics, dr[1,]$AIC)
print(paste("AIC = ", aics[length(aics)]))
dr_var <- rownames(dr[dr$AIC==min(dr$AIC[rownames(dr)!="<none>"]),])
}
plot(aics~c(1:length(aics)), type="l", xlab = "Variable dropped", ylab = "AIC")
points(aics~c(1:length(aics)))
points(aics[which(aics==min(aics))]~c(1:length(aics))[which(aics==min(aics))], col = "red")
axis(1, labels = dr_vars)
return(mods[[which(aics == min(aics))]])
}
summary(stepAIC(m.end))
stepAIC <- function(model){
mods <- list(model)
dr <- drop1(model)
aics <- c(dr[1,]$AIC)
print(paste("AIC = ", aics[length(aics)]))
dr_var <- rownames(dr[dr$AIC==min(dr$AIC[rownames(dr)!="<none>"]),])
dr_vars <- c("None")
while (length(dr_var) > 0) {
print(paste("Droping", dr_var))
model <- update(model, paste("~.-", dr_var, sep=""))
mods <- append(mods, list(model))
dr_vars <- c(dr_vars, dr_var)
(dr <- drop1(model))
aics <- c(aics, dr[1,]$AIC)
print(paste("AIC = ", aics[length(aics)]))
dr_var <- rownames(dr[dr$AIC==min(dr$AIC[rownames(dr)!="<none>"]),])
}
plot(aics~c(1:length(aics)), type="l", xlab = "Variable dropped", ylab = "AIC")
points(aics~c(1:length(aics)))
points(aics[which(aics==min(aics))]~c(1:length(aics))[which(aics==min(aics))], col = "red")
axis(1, at=1:length(aics), labels = dr_vars)
return(mods[[which(aics == min(aics))]])
}
summary(stepAIC(m.end))
stepAIC <- function(model){
mods <- list(model)
dr <- drop1(model)
aics <- c(dr[1,]$AIC)
print(paste("AIC = ", aics[length(aics)]))
dr_var <- rownames(dr[dr$AIC==min(dr$AIC[rownames(dr)!="<none>"]),])
dr_vars <- c("None")
while (length(dr_var) > 0) {
print(paste("Droping", dr_var))
model <- update(model, paste("~.-", dr_var, sep=""))
mods <- append(mods, list(model))
dr_vars <- c(dr_vars, dr_var)
(dr <- drop1(model))
aics <- c(aics, dr[1,]$AIC)
print(paste("AIC = ", aics[length(aics)]))
dr_var <- rownames(dr[dr$AIC==min(dr$AIC[rownames(dr)!="<none>"]),])
}
plot(aics~c(1:length(aics)), type="l", xlab = "Variable dropped", ylab = "AIC")
points(aics~c(1:length(aics)))
points(aics[which(aics==min(aics))]~c(1:length(aics))[which(aics==min(aics))], col = "red")
axis(1, labels = F)
text(x=1:length(aics), y=par("usr")[3] - 0.45, labels = dr_vars, xpd=NA, ssrt=35, cex=1.2)
return(mods[[which(aics == min(aics))]])
}
summary(stepAIC(m.end))
stepAIC <- function(model){
mods <- list(model)
dr <- drop1(model)
aics <- c(dr[1,]$AIC)
print(paste("AIC = ", aics[length(aics)]))
dr_var <- rownames(dr[dr$AIC==min(dr$AIC[rownames(dr)!="<none>"]),])
dr_vars <- c("None")
while (length(dr_var) > 0) {
print(paste("Droping", dr_var))
model <- update(model, paste("~.-", dr_var, sep=""))
mods <- append(mods, list(model))
dr_vars <- c(dr_vars, dr_var)
(dr <- drop1(model))
aics <- c(aics, dr[1,]$AIC)
print(paste("AIC = ", aics[length(aics)]))
dr_var <- rownames(dr[dr$AIC==min(dr$AIC[rownames(dr)!="<none>"]),])
}
plot(aics~c(1:length(aics)), type="l", xlab = "Variable dropped", ylab = "AIC")
points(aics~c(1:length(aics)))
points(aics[which(aics==min(aics))]~c(1:length(aics))[which(aics==min(aics))], col = "red")
axis(1, at=1:length(aics), labels = dr_vars)
return(mods[[which(aics == min(aics))]])
}
summary(stepAIC(m.end))
stepAIC <- function(model){
mods <- list(model)
dr <- drop1(model)
aics <- c(dr[1,]$AIC)
print(paste("AIC = ", aics[length(aics)]))
dr_var <- rownames(dr[dr$AIC==min(dr$AIC[rownames(dr)!="<none>"]),])
dr_vars <- c("None")
while (length(dr_var) > 0) {
print(paste("Droping", dr_var))
model <- update(model, paste("~.-", dr_var, sep=""))
mods <- append(mods, list(model))
dr_vars <- c(dr_vars, dr_var)
(dr <- drop1(model))
aics <- c(aics, dr[1,]$AIC)
print(paste("AIC = ", aics[length(aics)]))
dr_var <- rownames(dr[dr$AIC==min(dr$AIC[rownames(dr)!="<none>"]),])
}
plot(aics~dr_vars, type="l", xlab = "Variable dropped", ylab = "AIC")
points(aics~dr_vars)
points(aics[which(aics==min(aics))]~dr_vars[which(aics==min(aics))], col = "red")
# axis(1, at=1:length(aics), labels = dr_vars)
return(mods[[which(aics == min(aics))]])
}
summary(stepAIC(m.end))
stepAIC <- function(model){
mods <- list(model)
dr <- drop1(model)
aics <- c(dr[1,]$AIC)
print(paste("AIC = ", aics[length(aics)]))
dr_var <- rownames(dr[dr$AIC==min(dr$AIC[rownames(dr)!="<none>"]),])
dr_vars <- c("None")
while (length(dr_var) > 0) {
print(paste("Droping", dr_var))
model <- update(model, paste("~.-", dr_var, sep=""))
mods <- append(mods, list(model))
dr_vars <- c(dr_vars, dr_var)
(dr <- drop1(model))
aics <- c(aics, dr[1,]$AIC)
print(paste("AIC = ", aics[length(aics)]))
dr_var <- rownames(dr[dr$AIC==min(dr$AIC[rownames(dr)!="<none>"]),])
}
plot(aics~c(1:length(aics)), type="l", xlab = "Variable dropped", ylab = "AIC")
axis(1, at=1:length(aics), labels = dr_vars)
points(aics~c(1:length(aics)))
points(aics[which(aics==min(aics))]~c(1:length(aics))[which(aics==min(aics))], col = "red")
return(mods[[which(aics == min(aics))]])
}
summary(stepAIC(m.end))
stepAIC <- function(model){
mods <- list(model)
dr <- drop1(model)
aics <- c(dr[1,]$AIC)
print(paste("AIC = ", aics[length(aics)]))
dr_var <- rownames(dr[dr$AIC==min(dr$AIC[rownames(dr)!="<none>"]),])
dr_vars <- c("None")
while (length(dr_var) > 0) {
print(paste("Droping", dr_var))
model <- update(model, paste("~.-", dr_var, sep=""))
mods <- append(mods, list(model))
dr_vars <- c(dr_vars, dr_var)
(dr <- drop1(model))
aics <- c(aics, dr[1,]$AIC)
print(paste("AIC = ", aics[length(aics)]))
dr_var <- rownames(dr[dr$AIC==min(dr$AIC[rownames(dr)!="<none>"]),])
}
plot(aics~c(1:length(aics)), type="l", xlab = "Variable dropped", ylab = "AIC")
axis(1, at=1:length(aics), labels = dr_vars)
points(aics~c(1:length(aics)))
axis(1, at=1:length(aics), labels = dr_vars)
points(aics[which(aics==min(aics))]~c(1:length(aics))[which(aics==min(aics))], col = "red")
axis(1, at=1:length(aics), labels = dr_vars)
return(mods[[which(aics == min(aics))]])
}
summary(stepAIC(m.end))
stepAIC <- function(model){
mods <- list(model)
dr <- drop1(model)
aics <- c(dr[1,]$AIC)
print(paste("AIC = ", aics[length(aics)]))
dr_var <- rownames(dr[dr$AIC==min(dr$AIC[rownames(dr)!="<none>"]),])
dr_vars <- c("None")
while (length(dr_var) > 0) {
print(paste("Droping", dr_var))
model <- update(model, paste("~.-", dr_var, sep=""))
mods <- append(mods, list(model))
dr_vars <- c(dr_vars, dr_var)
(dr <- drop1(model))
aics <- c(aics, dr[1,]$AIC)
print(paste("AIC = ", aics[length(aics)]))
dr_var <- rownames(dr[dr$AIC==min(dr$AIC[rownames(dr)!="<none>"]),])
}
plot(aics~c(1:length(aics)), type="l", xlab = "Variable dropped", ylab = "AIC")
points(aics~c(1:length(aics)))
points(aics[which(aics==min(aics))]~c(1:length(aics))[which(aics==min(aics))], col = "red")
axis(1, at=1:length(aics), labels = dr_vars)
return(mods[[which(aics == min(aics))]])
}
summary(stepAIC(m.end))
summary(step(m.end, trace = F))
summary(stepAIC(m.end))
# length evening ----------------------------------------------------------------------------------------------------------
m.levening <- lm(l_evening ~ ALAN+noise_db+DEN+
temp_sunset+prec_sunset+press_sunset+humid_sunset+wind_sunset+cloud+moon+
ALAN:noise_db + ALAN:DEN + noise_db:DEN, data=df_levening)
View(df_lmorning)
df %>% select(Id_lokality,temp_sunrise,prec_sunrise,press_sunrise,humid_sunrise,wind_sunrise,cloud,moon) %>% distinct
df %>% select(Id_lokality,temp_sunrise,prec_sunrise,press_sunrise,humid_sunrise,wind_sunrise,cloud,moon) %>% distinct %>% nrow
unique(df$Id_lokality) %>% length()
# l_morning
df_lmorning <- df %>%
filter(time < as.POSIXct("12:00", format="%H:%M")) %>%
group_by(Id_lokality) %>%
summarize(l_morning = sum(delka),
n_morning = sum(POCET_ZPEVU)) %>%
left_join(df %>% select(Id_lokality,temp_sunrise,prec_sunrise,press_sunrise,humid_sunrise,wind_sunrise,cloud,moon) %>% distinct)
# l_evening
df_levening <- df %>%
filter(time > as.POSIXct("12:00", format="%H:%M")) %>%
group_by(Id_lokality) %>%
summarize(l_evening = sum(delka),
n_evening = sum(POCET_ZPEVU)) %>%
left_join(df %>% select(Id_lokality,temp_sunset,prec_sunset,press_sunset,humid_sunset,wind_sunset,cloud,moon) %>% distinct)
save(df_start, df_end, df_lmorning, df_levening, file = "data.RData")
# length evening ----------------------------------------------------------------------------------------------------------
m.levening <- lm(l_evening ~ ALAN+noise_db+DEN+
temp_sunset+prec_sunset+press_sunset+humid_sunset+wind_sunset+cloud+moon+
ALAN:noise_db + ALAN:DEN + noise_db:DEN, data=df_levening)
# l_evening
df_levening <- df %>%
filter(time > as.POSIXct("12:00", format="%H:%M")) %>%
group_by(Id_lokality) %>%
summarize(l_evening = sum(delka),
n_evening = sum(POCET_ZPEVU)) %>%
left_join(df %>% select(Id_lokality,temp_sunset,prec_sunset,press_sunset,humid_sunset,wind_sunset,cloud,moon,ALAN,noise_db,DEN) %>% distinct)
# l_morning
df_lmorning <- df %>%
filter(time < as.POSIXct("12:00", format="%H:%M")) %>%
group_by(Id_lokality) %>%
summarize(l_morning = sum(delka),
n_morning = sum(POCET_ZPEVU)) %>%
left_join(df %>% select(Id_lokality,temp_sunrise,prec_sunrise,press_sunrise,humid_sunrise,wind_sunrise,cloud,moon,ALAN,noise_db,DEN) %>%
distinct)
save(df_start, df_end, df_lmorning, df_levening, file = "data.RData")
# length evening ----------------------------------------------------------------------------------------------------------
m.levening <- lm(l_evening ~ ALAN+noise_db+DEN+
temp_sunset+prec_sunset+press_sunset+humid_sunset+wind_sunset+cloud+moon+
ALAN:noise_db + ALAN:DEN + noise_db:DEN, data=df_levening)
plot(m.levening)
summary(m.levening)
summary(stepAIC(m.levening))
summary(step(m.levening, trace = F))
# count evening -----------------------------------------------------------------------------------------------------------
m.nevening <- lm(n_evening ~ ALAN+noise_db+DEN+
temp_sunset+prec_sunset+press_sunset+humid_sunset+wind_sunset+cloud+moon+
ALAN:noise_db + ALAN:DEN + noise_db:DEN, data=df_levening)
plot(m.nevening)
summary(n.levening)
summary(m.nevening)
summary(stepAIC(m.levening))
summary(stepAIC(m.nevening))
summary(step(m.nevening, trace = F))
# length morning ----------------------------------------------------------------------------------------------------------
m.lmorning <- lm(l_morning ~ ALAN+noise_db+DEN+
temp_sunrise+prec_sunrise+press_sunrise+humid_sunrise+wind_sunrise+cloud+moon+
ALAN:noise_db + ALAN:DEN + noise_db:DEN, data=df_lmorning)
plot(m.lmorning)
summary(m.lmorning)
summary(stepAIC(m.lmorning))
stepAIC <- function(model){
mods <- list(model)
dr <- drop1(model)
aics <- c(dr[1,]$AIC)
print(paste("AIC = ", aics[length(aics)]))
dr_var <- rownames(dr[dr$AIC==min(dr$AIC[rownames(dr)!="<none>"]),])
dr_vars <- c("None")
while (length(dr_var) > 0) {
print(paste("Droping", dr_var))
model <- update(model, paste("~.-", dr_var, sep=""))
mods <- append(mods, list(model))
dr_vars <- c(dr_vars, dr_var)
(dr <- drop1(model))
aics <- c(aics, dr[1,]$AIC)
print(paste("AIC = ", aics[length(aics)]))
dr_var <- rownames(dr[dr$AIC==min(dr$AIC[rownames(dr)!="<none>"]),] %>% "["(.!="<none>") %>% "["(0))
}
plot(aics~c(1:length(aics)), type="l", xlab = "Variable dropped", ylab = "AIC")
points(aics~c(1:length(aics)))
points(aics[which(aics==min(aics))]~c(1:length(aics))[which(aics==min(aics))], col = "red")
axis(1, at=1:length(aics), labels = dr_vars)
return(mods[[which(aics == min(aics))]])
}
summary(stepAIC(m.lmorning))
summary(step(m.lmorning, trace = F))
# count morning -----------------------------------------------------------------------------------------------------------
m.nmorning <- lm(n_morning ~ ALAN+noise_db+DEN+
temp_sunrise+prec_sunrise+press_sunrise+humid_sunrise+wind_sunrise+cloud+moon+
ALAN:noise_db + ALAN:DEN + noise_db:DEN, data=df_nmorning)
# count morning -----------------------------------------------------------------------------------------------------------
m.nmorning <- lm(n_morning ~ ALAN+noise_db+DEN+
temp_sunrise+prec_sunrise+press_sunrise+humid_sunrise+wind_sunrise+cloud+moon+
ALAN:noise_db + ALAN:DEN + noise_db:DEN, data=df_lmorning)
summary(m.nmorning)
summary(stepAIC(m.nmorning))
summary(step(m.nmorning, trace = F))
library(tidyverse)
library(car)
load("data.RData")
# start -------------------------------------------------------------------------------------------------------------------
m.start <- lm(start_rel ~ ALAN+noise_db+DEN+
temp_sunrise+prec_sunrise+press_sunrise+humid_sunrise+wind_sunrise+cloud+moon+
ALAN:noise_db + ALAN:DEN + noise_db:DEN, data=df_start)
summary(stepAIC(m.start))
# end ---------------------------------------------------------------------------------------------------------------------
m.end <- lm(end_rel ~ ALAN+noise_db+DEN+
temp_sunset+prec_sunset+press_sunset+humid_sunset+wind_sunset+cloud+moon+
ALAN:noise_db + ALAN:DEN + noise_db:DEN, data=df_end)
summary(stepAIC(m.end))
# length morning ----------------------------------------------------------------------------------------------------------
m.lmorning <- lm(l_morning ~ ALAN+noise_db+DEN+
temp_sunrise+prec_sunrise+press_sunrise+humid_sunrise+wind_sunrise+cloud+moon+
ALAN:noise_db + ALAN:DEN + noise_db:DEN, data=df_lmorning)
summary(stepAIC(m.lmorning))
# count morning -----------------------------------------------------------------------------------------------------------
m.nmorning <- lm(n_morning ~ ALAN+noise_db+DEN+
temp_sunrise+prec_sunrise+press_sunrise+humid_sunrise+wind_sunrise+cloud+moon+
ALAN:noise_db + ALAN:DEN + noise_db:DEN, data=df_lmorning)
summary(stepAIC(m.nmorning))
# length evening ----------------------------------------------------------------------------------------------------------
m.levening <- lm(l_evening ~ ALAN+noise_db+DEN+
temp_sunset+prec_sunset+press_sunset+humid_sunset+wind_sunset+cloud+moon+
ALAN:noise_db + ALAN:DEN + noise_db:DEN, data=df_levening)
summary(stepAIC(m.levening))
# count evening -----------------------------------------------------------------------------------------------------------
m.nevening <- lm(n_evening ~ ALAN+noise_db+DEN+
temp_sunset+prec_sunset+press_sunset+humid_sunset+wind_sunset+cloud+moon+
ALAN:noise_db + ALAN:DEN + noise_db:DEN, data=df_levening)
summary(stepAIC(m.nevening))
